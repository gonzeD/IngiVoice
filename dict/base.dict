twoPoint T UW P OY N T
False F AO L S
class K L AE S
finally F AY N AH L IY
verbatim V ER B EY T AH M
is IH Z
return R IH T ER N
None N AH N
continue K AH N T IH N Y UW
for F AO R
lambda L AE M D AH
try T R AY
True T R UW
#TODO
from F R AH M
nonlocal N AA N L OW K AH L
while W AY L
and AH N D
del D EH L
global G L OW B AH L
not N AA T
with W IH DH
as AE Z
elif EH L IH F
#TODO
if IH F
or AO R
yield Y IY L D
assert AH S EH R T
else EH L S
import IH M P AO R T
pass P AE S
break B R EY K
except IH K S EH P T
in IH N
raise  R EY Z
zero Z IY R OW
one W AH N
two T UW
three TH R IY
four F AO R
five F AY V
six S IH K S
seven S EH V AH N
eight EY T
nine N AY N
temp T EH M P
myVariable M AY V EH R IY AH B AH L
plus P L AH S
equal IY K W AH L
divide D IH V AY D
multiply M AH L T AH P L AY
minus M AY N AH S
print P R IH N T
myFunction M AY F AH NG K SH AH N
variable V EH R IY AH B AH L
function F AH NG K SH AH N
openParenthesis OW P AH N P ER EH N TH AH S IH S
closeParenthesis K L OW S P ER EH N TH AH S IH S
comma K AA M AH
endLine EH N D L AY N
addTab AE D T AE B
removeTab R IY M UW V T AE B
endText EH N D T EH K S T
colon K OW L AH N
string S T R IH NG
dot D AA T
modulo M AO JH UW L AO
catch K AE CH
package P AE K AH JH
def D EH F
